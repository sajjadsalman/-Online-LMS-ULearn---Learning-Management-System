<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Documentation Page</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" href="https://comp466tma2.000webhostapp.com/part1/index.php">Bookmark Manager!</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="https://comp466tma2.000webhostapp.com/part2/welcome.php">ULearn</a>
        </li>
      </ul>
    </div>
  </nav>
  
  <div class="container mt-4">
    <h1 class="text-center">Muhammad Sajjad Salman</h1>
    <p class="text-center">COMP 466 - Advanced Technology for Web-Based Systems</p>
    <p class="text-center">Assignment 2</p>
    <p class="text-center">Start date: 25 March 2023</p>
    <p class="text-center">Start date: 25 April 2023</p>
    <p class="text-center">Estimated hours: 250 hours</p>
    <hr>
    <h2>Projects</h2>
    <p>The projects are hosted on the web and you can access the links to the projects are provided below:</p>
    <ol>
      <li><a href="https://comp466tma2.000webhostapp.com/part1/index.php">Bookmark Manager</a></li>
      <li><a href="https://comp466tma2.000webhostapp.com/part2/welcome.php">ULearn!</a></li>
    </ol>
    <h2 class="text-center">Bookmark Manager</h2>
    <h3>Description</h2>
    <p>Following is my description of the assignment project and requirements:</p>
    <ul>
        <li>The web application should have a good thoughtful interface, with menus and/or navigation buttons.</li>
        <li>It should have a name or logo shown across all the pages.</li>
        <li>It should begin with a welcome or greeting message and a list of ten most popular websites that users of the web application have bookmarked.</li>
        <li>Once signed in, a list of bookmarks the user has made should be displayed, and the user can browse any web site in the list in a new browser tab or window by clicking a link to the site.</li>
        <li>The user can add new websites to the list and edit and delete any of the existing ones in the list;</li>
        <li>When adding or editing, user input needs to be validated using JavaScript, to make sure the URLs are not only correct but also active.</li>
    </ul>
    <hr>
    <h3>Analysis and Design</h3>
    <p>Following is my description of the assignment project and requirements:</p>
    <ul>
        <li>The web application for managing bookmarks was developed using a MySQL database to store information about registration (id, username, password) and bookmarks (id, user_id, URL), while the user interface was built using HTML, Bootstrap CSS, and JavaScript. The PHP programming language was used to create server-side scripts to handle user login and registration, adding, editing, and deleting bookmarks.</li>
        <li>The main page was developed using a PHP script (main.php) was used to check if there is a session that is currently logged in. If so, the user is redirected to the home page (home.php) where they can manage their bookmarks. If not, the welcome page (welcome.php) is displayed with the top 10 most bookmarked URLs retrieved from a MySQL database.</li>
        <li>The login and registration pages are implemented using HTML forms that submit data to PHP scripts on the server-side. The login form (login.php) sends a post request to 'loginHelper.php' with the user's username and MD5 hashed password appended to the request. The PHP script (loginHelper.php) then checks if the given username and hashed password are valid and if so, logs the user in by setting a session variable. Similarly, the registration form (sign.php) submits data to 'signup.php', where the PHP script (signup.php) first checks if the username is available and then stores the new user information in the database.</li>
        <li>The main page (home.php) displays all bookmarks associated with the current user retrieved from the MySQL database, and allows users to add, edit, or delete bookmarks. When adding a new bookmark, a JavaScript function is used to validate the URL format before sending a POST request to 'insert.php'. The PHP script (insert.php) then checks if the URL already exists in the database before inserting it with the user ID. The edit and delete buttons also make use of AJAX calls to call PHP scripts (edit.php and delete.php) that update or delete bookmarks in the database. The edit.php sends a post request to update .php with url and id.</li>
        <li>Additional feature implemented in the app is the navigation bar. You can navigate through the app using the nav bar. </li>
        <li>Overall, the combination of HTML, Bootstrap CSS, JavaScript, and PHP with a MySQL database provided a powerful and flexible platform for developing a bookmark manager web application.</li>
    </ul>
    <hr>
    <h3>Files</h3>
    <p><strong>I asked the Professor Liaqat about initializing the database and he said it should already be implemented from my end. So I have not included those files but please let me know if that is not the case and I misunderstood the instruction. I created the database on phpmyadmin and added some dummy data for testing. A small description of all the files contained in the project:</strong></p>
    <ul>
        <li>config.php
            <ul>
                <li>Database connection to bookmark_systems implemented here.</li>
            </ul>
        </li>
        <li>main.php
          <ul>
            <li>This is the landing page of the website.</li>
            <li>Contains a welcome message and a link to sign up page and login page in navbar.</li>
            <li>Dynamically displays the 10 most popular bookmarks added by other users. </li>
          </ul>
        </li>
        <li>login.php and loginHelper.php
            <ul>
              <li>Takes the username and password inputs.</li>
              <li>send a  post request to loginHelper.php with the inputs and validates if the records match the database.</li>
              <li>If successful, redirects the user to home.php otherwise displays a sign in error.</li>
            </ul>
          </li>
        <li>sign.php and signup.php
          <ul>
            <li>Takes the username and password inputs.</li>
            <li>Sends a request to signup.php with the inputs and checks if the username already exists or not.</li>
            <li>If not, then it adds the records to the database registration table. If yes, then it displays a signup error.</li>
          </ul>
        </li>
        <li>home.php
            <ul>
              <li>Main page of the user containing a url field, and displays all the bookmarks added by the users.</li>
              <li>You can add the urls by entering it in the url field which verifies if its an actual url. The input sends post to insert.php which checks if the boookmark is already in the database or not.</li>
              <li>If not, then it adds the records to the database bookmark table. If yes, then it displays a duplicate url error.</li>
              <li>If you want to edit or delete the tweet from the list of bookmark, click the respective button. It will send the post request to delete.php or edit.php</li>
            </ul>
        </li>
        <li>edit.php or delete.php
            <ul>
              <li>The url posted to these files will be either removed from the list or updated.</li>
              <li>The url posted on edit.php will send post request to update.php to update the url with that id in the bookmark table.</li>
              <li>The table is update dynamically after changes.</li>
            </ul>
        </li>
        <li>table.js
            <ul>
              <li>Hides the bookmark table on home page if no bookmark is added and displays if bookmark is added.</li>
            </ul>
        </li>
        <li>logout.php
            <ul>
              <li>When the user clicks it on the navbar, session variables are deleted and the user is sent to login.php</li>
            </ul>
        </li>
        <li>checkurl.js
            <ul>
              <li>checks if the url is valid. Took some help from stackoverflow.</li>
            </ul>
        </li>
    </ul>
    <hr>
    <h3>Database Design</h3>
    <p>Here is the database design:</p>
    <img src="./shared/Screen Shot 2023-05-07 at 1.08.45 AM.png" alt="Database tables" height="300" width="650">
    <hr>
    <h3>Setup and running</h2>
    <ul>
        <li>To setup this project, you need to have Mamp on your macbook or Xammp on your windows. I have used mamp for macbook and not tested the Xammp but the process should be similar.
            Add the TMA2 folder in the htcdocs folder in either Mamp or Xammp. Go to google chrome or microsoft edge and enter this url: http://localhost:8888/TMA2/main.php. This should open the landing main page of the app and you can use it from there.
        </li>
        <li>To run the the application normally on the web, you can just use this link: <a href="https://comp466tma2.000webhostapp.com/part1/index.php">Bookmark Manager</a></li>
    </ul>
    <br>
    <h2 class="text-center">ULearn</h2>
    <h3>My Interpretation</h3>
    <p>I left the assignment description since it was too long. Following is my description of the assignment project and requirements:</p>
    <ul>
        <li>We need to develop an online learning web application from scratch.</li>
        <li>The app needs to have a professional interface, a database system, course material with different study units, quizzes for testing, course registration and available courses options.</li>
        <li>We need to develop an EML to store our course material like units and quizzes in the database.</li>
        <li>We need to create a parser which uses RegEx to read the data from the database and display it on the web app using html.</li>
        <li>This is because it is expected that the SMEs are not very proficient in computer languages but the are comfortable with the EML we create.</li>
    </ul>
    <hr>
    <h3>Analysis and Design</h3>
    <p>Following is my description of the assignment project and requirements:</p>
    <ul>
        <li>The web application ULearn was developed using a MySQL database to store information about registration, components, courseList, quizzes, units, user_courses while the user interface was built using HTML, Bootstrap CSS, and JavaScript. The PHP programming language was used to create server-side scripts to handle user login and registration of users, registration of courses, adding course material to database, and parsing course material to the web app.</li>
        <li>The login and registration pages are implemented using HTML forms that submit data to PHP scripts on the server-side. The login form (login.php) sends a post request to 'loginHelper.php' with the user's username and MD5 hashed password appended to the request. The PHP script (loginHelper.php) then checks if the given username and hashed password are valid and if so, logs the user in by setting a session variable. Similarly, the registration form (sign.php) submits data to 'signup.php', where the PHP script (signup.php) first checks if the username is available and then stores the new user information in the database.</li>
        <li>The main page was developed in HTML and bootstrap to present a welcome message and provide login, sign up options. Click either button takes you to either sign.php and login.php. </li>
        <li> The login page was developed using a PHP script (login.php) was used to check if there is a session that is currently logged in. If so, the user is redirected to the home page (main.php) where they can see what courses they are registered into using mysql and php data extraction from database. If the user is not registered into any course, they can register into the courses from the link on the body or clicking register button on the navbar.</li>
        <li>Once you click Register on the navbar or click the link on the body, you redirect to registerCourse.php. Here you can view all the available courses and register into it. Currently there is only one course added to the data base. Once you click register on a course, a Post request is sent to classRegister.php which adds that course to the user in database. Then you are redirected to main.php where you can view the course listed.</li>
        <li>You can now see the course you registered on main.php. Once you click the course, you can view what units the course has in dropdown menu. Once, you click the unit, you are redirected to displayLesson.php which retrieves the data from the database using id and the parser is utilized to display the data retrieved from the database to the app in HTML.</li>
        <li>You can access the quiz at the botton of the lesson. 'Taking the quiz' button will redirect you to quiz.php which uses quiz.js php to function and display the quiz by retrieving and parsing data from database using an id.</li>
        <li>The parser is developed using PHP and PHP RegEx library. The EML developed contains tags that the parser recognizes to return an array containing separate content for each tag in the EML.</li>
        <li>Overall, the combination of HTML, Bootstrap CSS, JavaScript, and PHP with a MySQL database provided a powerful and flexible platform for developing a bookmark manager web application.</li>
    </ul>
    <hr>
    <h3>Files</h3>
    <p><strong>I asked the Professor Liaqat about initializing the database and he said it should already be implemented from my end. So I have not included those files but please let me know if that is not the case and I misunderstood the instruction. I created the database on phpmyadmin and added some dummy data for testing. A small description of all the files contained in the project:</strong></p>
    <ul>
        <li>config.php
            <ul>
                <li>Database connection to bookmark_systems implemented here.</li>
            </ul>
        </li>
        <li>Welcome.php
          <ul>
            <li>This is the landing page of the website.</li>
            <li>Contains a welcome message and a link to sign up page and login page in the body.</li>
          </ul>
        </li>
        <li>login.php and loginHelper.php
            <ul>
              <li>Takes the username and password inputs.</li>
              <li>send a  post request to loginHelper.php with the inputs and validates if the records match the database.</li>
              <li>If successful, redirects the user to main.php otherwise displays a sign in error.</li>
            </ul>
          </li>
        <li>sign.php and signup.php
          <ul>
            <li>Takes the username and password inputs.</li>
            <li>Sends a request to signup.php with the inputs and checks if the username already exists or not.</li>
            <li>If not, then it adds the records to the database registration table. If yes, then it displays a signup error.</li>
          </ul>
        </li>
        <li>main.php
            <ul>
              <li>The main page retrieves data from the database and displays a course in the body.</li>
              <li>If you dont have a course then you can click regsiter in the body or navbar.</li>
              <li>If the course is already registered you can click the course to view the drop down menu. the units will be retrived from the database.</li>
              <li>To read the material, you click on the unit number and the parser retrieves the content and assembles it in a manner we have want.</li>
              <li></li>
            </ul>
        </li>
        <li>registerCourse.php
            <ul>
              <li>Displays all the courses available from the database and adds the users and the course to database which will make it easier to display their courses display courses when the user logs in. It sends a post request to classRegister to fetch query results.</li>
            </ul>
        </li>
        <li>displayLesson.php and displayQuiz.php
            <ul>
              <li>It sends a post request to retrieve the data from the database and present it nicely after parsing the content.</li>
            </ul>
        </li>
        <li>parser.php
            <ul>
              <li>This file has two parser functions, one for the lecture and one for quiz. The parser fetches query results from the database and turns into an organized array.</li>
            </ul>
        </li>
        <li>quiz.js
            <ul>
              <li>This is the backend of the quiz. It will check the input of the quiz answers and mark it accordingly.</li>
            </ul>
        </li>
    </ul>
    <hr>
    <h3>Educational Markup Language</h3>
    <p>I added chap1.txt and quiz1.txt to the shared folder to check the EMl out. Rest of the content is on the database.</p>
    <h5>Course Content</h5>
    <ul>
      <li>Each chapter in one unit is contained in the tags {subchap}{/subchap}</li>
      <li>The heading of the chapter is contained in {heading}{/heading}</li>
      <li>The notes section contains all the content of the chapter and has the tags {notes}{/notes}</li>
      <li>The content tags contain all the data of the chapter point by point and has the tags {content}{/content}</li>
    </ul>
    <img src="./shared/Screen Shot 2023-05-08 at 6.48.35 AM.png" alt="EML subchap" height="300" width="700">
    <h5>Course Content</h5>
    <ul>
      <li>Each quiz question is contained in {MCQ}{/MCQ}</li>
      <li>the form type tells what kind of question it is, currently all are Multple choice. But it can be text, mcq, t/f {form}{/form}</li>
      <li>The question statement is enclosed in {question}{/question}</li>
      <li>The choices for the question are contained in {option}{/option}</li>
      <li>The answer is for the question is contained in {ans}{/ans}</li>
    </ul>
    <img src="./shared/Screen Shot 2023-05-08 at 6.30.58 AM.png" alt="EML quiz" height="300" width="700">
    <hr>
    <h3>Data Flow</h3>
    <p>According to the discussion on MyAU, I found out that the teachers portal is not required. I might be mistaken but please let me know if I'm wrong and if I can update it.</p>
    <p>But, assuming that the teachers portal is implemented the data flow would be:</p>
    <p>Teacher inputs data (EML) -> Client Scripts will process and run to process data -> POST request to PHP script (Data will be sent to Database) -> MySQL Database -> Parsing in the server (sent back to students end) -> Student</p>
    <p>Because there is no teachers portal currently so the Data is already stored in the MySQL Database and is processed/parsed on server and sent to the student directly.</p>
    <hr>
    <h3>Database Design</h3>
    <p>Here is the database design:</p>
    <img src="./shared/Screen Shot 2023-05-08 at 7.57.50 AM.png" alt="Database tables" height="300" width="650">
    <p>My database contains the following 6 tables</p>
    <ul>
      <li>registration
          <ul>
              <li>Contains username and passwords of students.</li>
              <li>id is Private key and username is Unique Index.</li>
          </ul>
      </li>
      <li>user_courses
        <ul>
            <li>Contains information on which user has which course.</li>
            <li>Many to 1 relationship between users and courseList.</li>
            <li>Both attributes are Primary keys</li>
            <li>user_id is a foreign key from registration</li>
            <li>course_id is foreign key from courseList</li>
        </ul>
      </li>
      <li>courseList
        <ul>
            <li>Contains information on all the courses. Currently just 1.</li>
            <li>Primary Key is course_id</li>
        </ul>
      </li>
      <li>units
        <ul>
            <li>Contains information on units in a course.</li>
            <li>unit_id is Primary Keys.</li>
            <li>course_id is a foreign key from courseList.</li>
        </ul>
      </li>
      <li>components
        <ul>
            <li>Contains information on chapters in a unit.</li>
            <li>chap_id is Primary Keys.</li>
            <li>parent_unit_id is a foreign key from units.</li>
        </ul>
      </li>
      <li>quiz
        <ul>
            <li>Contains information on quizes in a chapter in a unit.</li>
            <li>quiz_id is Primary Keys.</li>
            <li>unit_quiz_id is a foreign key from units.</li>
        </ul>
      </li>
    </ul>
    <hr>
    <h3>Setup and running</h3>
    <ul>
        <li>To setup this project, you need to have Mamp on your macbook or Xammp on your windows. I have used mamp for macbook and not tested the Xammp but the process should be similar.
            Add the TMA2 folder in the htcdocs folder in either Mamp or Xammp. Go to google chrome or microsoft edge and enter this url: http://localhost:8888/TMA2/part1/main.php. This should open the landing main page of the app and you can use it from there.
        </li>
        <li>To run the the application normally on the web, you can just use this link: <a href="https://comp466tma2.000webhostapp.com/part2/welcome.php">ULearn</a></li>
    </ul>
  </div>
  
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>
